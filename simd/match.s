// Code generated by command: go run asm.go -out match.s -stubs match_amd64.go. DO NOT EDIT.

//go:build amd64

#include "textflag.h"

// func MatchMetadata(metadata *[16]int8, hash int8) uint16
// Requires: SSE2, SSSE3
TEXT 路MatchMetadata(SB), NOSPLIT, $0-18
	MOVQ     metadata+0(FP), AX
	MOVBLSX  hash+8(FP), CX
	MOVD     CX, X0
	PXOR     X1, X1
	PSHUFB   X1, X0
	MOVOU    (AX), X1
	PCMPEQB  X1, X0
	PMOVMSKB X0, AX
	MOVW     AX, ret+16(FP)
	RET

// func MatchCRTLhash(ctrl *[16]int8, hash int64) int32
// Requires: SSE2, SSSE3
TEXT 路MatchCRTLhash(SB), NOSPLIT, $0-20
	MOVQ     ctrl+0(FP), AX
	MOVQ     hash+8(FP), CX
	MOVQ     CX, X0
	PXOR     X1, X1
	PSHUFB   X1, X0
	MOVOU    (AX), X1
	PCMPEQB  X1, X0
	PMOVMSKB X0, AX
	MOVL     AX, ret+16(FP)
	RET

// func MatchCRTLempty(ctrl *[16]int8) int32
// Requires: SSE2, SSSE3
TEXT 路MatchCRTLempty(SB), NOSPLIT, $0-12
	MOVQ     ctrl+0(FP), AX
	MOVQ     $0x00000080, CX
	MOVQ     CX, X0
	PXOR     X1, X1
	PSHUFB   X1, X0
	MOVOU    (AX), X1
	PCMPEQB  X1, X0
	PMOVMSKB X0, AX
	MOVL     AX, ret+8(FP)
	RET

// func MatchCRTLdeleted(ctrl *[16]int8) int32
// Requires: SSE2, SSSE3
TEXT 路MatchCRTLdeleted(SB), NOSPLIT, $0-12
	MOVQ     ctrl+0(FP), AX
	MOVQ     $0x000000fe, CX
	MOVQ     CX, X0
	PXOR     X1, X1
	PSHUFB   X1, X0
	MOVOU    (AX), X1
	PCMPEQB  X1, X0
	PMOVMSKB X0, AX
	MOVL     AX, ret+8(FP)
	RET
